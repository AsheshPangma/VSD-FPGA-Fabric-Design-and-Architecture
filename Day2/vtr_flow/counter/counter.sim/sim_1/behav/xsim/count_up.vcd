$date
   Thu Dec 15 20:29:35 2022
$end
$version
  2019.2
$end
$timescale
  1ps
$end
$scope module upcounter_testbench $end
$var reg 1 ! clk $end
$var reg 1 " reset $end
$var reg 1 # enable $end
$var wire 4 $ out [3:0] $end
$scope module dut $end
$var wire 1 % \up_counter^enable  $end
$var wire 1 & \up_counter^clk  $end
$var wire 1 ' \up_counter^reset  $end
$var wire 1 ( \up_counter^out~0  $end
$var wire 1 ) \up_counter^out~1  $end
$var wire 1 * \up_counter^out~2  $end
$var wire 1 + \up_counter^out~3  $end
$var wire 1 , \up_counter^enable_output_0_0  $end
$var wire 1 - \up_counter^clk_output_0_0  $end
$var wire 1 . \up_counter^reset_output_0_0  $end
$var wire 1 / lut_n22_output_0_0 $end
$var wire 1 0 lut_n27_output_0_0 $end
$var wire 1 1 lut_n32_output_0_0 $end
$var wire 1 2 lut_n37_output_0_0 $end
$var wire 1 3 lut_vcc_output_0_0 $end
$var wire 1 4 \adder_up_counter^ADD~4-0[0]_output_0_0  $end
$var wire 1 5 \adder_up_counter^ADD~4-1[0]_output_0_0  $end
$var wire 1 6 \adder_up_counter^ADD~4-1[0]_output_1_0  $end
$var wire 1 7 lut_gnd_output_0_0 $end
$var wire 1 8 \adder_up_counter^ADD~4-2[0]_output_0_0  $end
$var wire 1 9 \adder_up_counter^ADD~4-2[0]_output_1_0  $end
$var wire 1 : \adder_up_counter^ADD~4-3[0]_output_0_0  $end
$var wire 1 ; \adder_up_counter^ADD~4-3[0]_output_1_0  $end
$var wire 1 < \adder_up_counter^ADD~4-4[0]_output_1_0  $end
$var wire 1 = \latch_up_counter^out~0_FF_output_0_0  $end
$var wire 1 > \latch_up_counter^out~1_FF_output_0_0  $end
$var wire 1 ? \latch_up_counter^out~2_FF_output_0_0  $end
$var wire 1 @ \latch_up_counter^out~3_FF_output_0_0  $end
$var wire 1 A lut_n22_input_0_2 $end
$var wire 1 B lut_n27_input_0_0 $end
$var wire 1 C lut_n37_input_0_4 $end
$var wire 1 D lut_n32_input_0_0 $end
$var wire 1 E \latch_up_counter^out~0_FF_clock_0_0  $end
$var wire 1 F \latch_up_counter^out~3_FF_clock_0_0  $end
$var wire 1 G \latch_up_counter^out~1_FF_clock_0_0  $end
$var wire 1 H \latch_up_counter^out~2_FF_clock_0_0  $end
$var wire 1 I lut_n22_input_0_1 $end
$var wire 1 J lut_n27_input_0_2 $end
$var wire 1 K lut_n37_input_0_2 $end
$var wire 1 L lut_n32_input_0_4 $end
$var wire 1 M \latch_up_counter^out~0_FF_input_0_0  $end
$var wire 1 N \latch_up_counter^out~3_FF_input_0_0  $end
$var wire 1 O \latch_up_counter^out~2_FF_input_0_0  $end
$var wire 1 P \latch_up_counter^out~1_FF_input_0_0  $end
$var wire 1 Q \adder_up_counter^ADD~4-0[0]_input_0_0  $end
$var wire 1 R \adder_up_counter^ADD~4-1[0]_input_1_0  $end
$var wire 1 S \adder_up_counter^ADD~4-1[0]_input_2_0  $end
$var wire 1 T \adder_up_counter^ADD~4-2[0]_input_2_0  $end
$var wire 1 U lut_n22_input_0_3 $end
$var wire 1 V \adder_up_counter^ADD~4-0[0]_input_1_0  $end
$var wire 1 W \adder_up_counter^ADD~4-2[0]_input_1_0  $end
$var wire 1 X \adder_up_counter^ADD~4-3[0]_input_1_0  $end
$var wire 1 Y \adder_up_counter^ADD~4-4[0]_input_1_0  $end
$var wire 1 Z \adder_up_counter^ADD~4-3[0]_input_2_0  $end
$var wire 1 [ lut_n37_input_0_3 $end
$var wire 1 \ \adder_up_counter^ADD~4-4[0]_input_2_0  $end
$var wire 1 ] lut_n32_input_0_1 $end
$var wire 1 ^ lut_n27_input_0_1 $end
$var wire 1 _ lut_n22_input_0_4 $end
$var wire 1 ` \adder_up_counter^ADD~4-1[0]_input_0_0  $end
$var wire 1 a \up_counter^out~0_input_0_0  $end
$var wire 1 b lut_n37_input_0_0 $end
$var wire 1 c \adder_up_counter^ADD~4-2[0]_input_0_0  $end
$var wire 1 d \up_counter^out~1_input_0_0  $end
$var wire 1 e lut_n32_input_0_2 $end
$var wire 1 f \adder_up_counter^ADD~4-3[0]_input_0_0  $end
$var wire 1 g \up_counter^out~2_input_0_0  $end
$var wire 1 h lut_n27_input_0_4 $end
$var wire 1 i \adder_up_counter^ADD~4-4[0]_input_0_0  $end
$var wire 1 j \up_counter^out~3_input_0_0  $end
$scope module routing_segment_up_counter^enable_output_0_0_to_lut_n22_input_0_2 $end
$var wire 1 , datain $end
$var wire 1 A dataout $end
$upscope $end
$scope module routing_segment_up_counter^enable_output_0_0_to_lut_n27_input_0_0 $end
$var wire 1 , datain $end
$var wire 1 B dataout $end
$upscope $end
$scope module routing_segment_up_counter^enable_output_0_0_to_lut_n37_input_0_4 $end
$var wire 1 , datain $end
$var wire 1 C dataout $end
$upscope $end
$scope module routing_segment_up_counter^enable_output_0_0_to_lut_n32_input_0_0 $end
$var wire 1 , datain $end
$var wire 1 D dataout $end
$upscope $end
$scope module routing_segment_up_counter^clk_output_0_0_to_latch_up_counter^out~0_FF_clock_0_0 $end
$var wire 1 - datain $end
$var wire 1 E dataout $end
$upscope $end
$scope module routing_segment_up_counter^clk_output_0_0_to_latch_up_counter^out~3_FF_clock_0_0 $end
$var wire 1 - datain $end
$var wire 1 F dataout $end
$upscope $end
$scope module routing_segment_up_counter^clk_output_0_0_to_latch_up_counter^out~1_FF_clock_0_0 $end
$var wire 1 - datain $end
$var wire 1 G dataout $end
$upscope $end
$scope module routing_segment_up_counter^clk_output_0_0_to_latch_up_counter^out~2_FF_clock_0_0 $end
$var wire 1 - datain $end
$var wire 1 H dataout $end
$upscope $end
$scope module routing_segment_up_counter^reset_output_0_0_to_lut_n22_input_0_1 $end
$var wire 1 . datain $end
$var wire 1 I dataout $end
$upscope $end
$scope module routing_segment_up_counter^reset_output_0_0_to_lut_n27_input_0_2 $end
$var wire 1 . datain $end
$var wire 1 J dataout $end
$upscope $end
$scope module routing_segment_up_counter^reset_output_0_0_to_lut_n37_input_0_2 $end
$var wire 1 . datain $end
$var wire 1 K dataout $end
$upscope $end
$scope module routing_segment_up_counter^reset_output_0_0_to_lut_n32_input_0_4 $end
$var wire 1 . datain $end
$var wire 1 L dataout $end
$upscope $end
$scope module routing_segment_lut_n22_output_0_0_to_latch_up_counter^out~0_FF_input_0_0 $end
$var wire 1 / datain $end
$var wire 1 M dataout $end
$upscope $end
$scope module routing_segment_lut_n27_output_0_0_to_latch_up_counter^out~3_FF_input_0_0 $end
$var wire 1 0 datain $end
$var wire 1 N dataout $end
$upscope $end
$scope module routing_segment_lut_n32_output_0_0_to_latch_up_counter^out~2_FF_input_0_0 $end
$var wire 1 1 datain $end
$var wire 1 O dataout $end
$upscope $end
$scope module routing_segment_lut_n37_output_0_0_to_latch_up_counter^out~1_FF_input_0_0 $end
$var wire 1 2 datain $end
$var wire 1 P dataout $end
$upscope $end
$scope module routing_segment_lut_vcc_output_0_0_to_adder_up_counter^ADD~4-0[0]_input_0_0 $end
$var wire 1 3 datain $end
$var wire 1 Q dataout $end
$upscope $end
$scope module routing_segment_lut_vcc_output_0_0_to_adder_up_counter^ADD~4-1[0]_input_1_0 $end
$var wire 1 3 datain $end
$var wire 1 R dataout $end
$upscope $end
$scope module routing_segment_adder_up_counter^ADD~4-0[0]_output_0_0_to_adder_up_counter^ADD~4-1[0]_input_2_0 $end
$var wire 1 4 datain $end
$var wire 1 S dataout $end
$upscope $end
$scope module routing_segment_adder_up_counter^ADD~4-1[0]_output_0_0_to_adder_up_counter^ADD~4-2[0]_input_2_0 $end
$var wire 1 5 datain $end
$var wire 1 T dataout $end
$upscope $end
$scope module routing_segment_adder_up_counter^ADD~4-1[0]_output_1_0_to_lut_n22_input_0_3 $end
$var wire 1 6 datain $end
$var wire 1 U dataout $end
$upscope $end
$scope module routing_segment_lut_gnd_output_0_0_to_adder_up_counter^ADD~4-0[0]_input_1_0 $end
$var wire 1 7 datain $end
$var wire 1 V dataout $end
$upscope $end
$scope module routing_segment_lut_gnd_output_0_0_to_adder_up_counter^ADD~4-2[0]_input_1_0 $end
$var wire 1 7 datain $end
$var wire 1 W dataout $end
$upscope $end
$scope module routing_segment_lut_gnd_output_0_0_to_adder_up_counter^ADD~4-3[0]_input_1_0 $end
$var wire 1 7 datain $end
$var wire 1 X dataout $end
$upscope $end
$scope module routing_segment_lut_gnd_output_0_0_to_adder_up_counter^ADD~4-4[0]_input_1_0 $end
$var wire 1 7 datain $end
$var wire 1 Y dataout $end
$upscope $end
$scope module routing_segment_adder_up_counter^ADD~4-2[0]_output_0_0_to_adder_up_counter^ADD~4-3[0]_input_2_0 $end
$var wire 1 8 datain $end
$var wire 1 Z dataout $end
$upscope $end
$scope module routing_segment_adder_up_counter^ADD~4-2[0]_output_1_0_to_lut_n37_input_0_3 $end
$var wire 1 9 datain $end
$var wire 1 [ dataout $end
$upscope $end
$scope module routing_segment_adder_up_counter^ADD~4-3[0]_output_0_0_to_adder_up_counter^ADD~4-4[0]_input_2_0 $end
$var wire 1 : datain $end
$var wire 1 \ dataout $end
$upscope $end
$scope module routing_segment_adder_up_counter^ADD~4-3[0]_output_1_0_to_lut_n32_input_0_1 $end
$var wire 1 ; datain $end
$var wire 1 ] dataout $end
$upscope $end
$scope module routing_segment_adder_up_counter^ADD~4-4[0]_output_1_0_to_lut_n27_input_0_1 $end
$var wire 1 < datain $end
$var wire 1 ^ dataout $end
$upscope $end
$scope module routing_segment_latch_up_counter^out~0_FF_output_0_0_to_lut_n22_input_0_4 $end
$var wire 1 = datain $end
$var wire 1 _ dataout $end
$upscope $end
$scope module routing_segment_latch_up_counter^out~0_FF_output_0_0_to_adder_up_counter^ADD~4-1[0]_input_0_0 $end
$var wire 1 = datain $end
$var wire 1 ` dataout $end
$upscope $end
$scope module routing_segment_latch_up_counter^out~0_FF_output_0_0_to_up_counter^out~0_input_0_0 $end
$var wire 1 = datain $end
$var wire 1 a dataout $end
$upscope $end
$scope module routing_segment_latch_up_counter^out~1_FF_output_0_0_to_lut_n37_input_0_0 $end
$var wire 1 > datain $end
$var wire 1 b dataout $end
$upscope $end
$scope module routing_segment_latch_up_counter^out~1_FF_output_0_0_to_adder_up_counter^ADD~4-2[0]_input_0_0 $end
$var wire 1 > datain $end
$var wire 1 c dataout $end
$upscope $end
$scope module routing_segment_latch_up_counter^out~1_FF_output_0_0_to_up_counter^out~1_input_0_0 $end
$var wire 1 > datain $end
$var wire 1 d dataout $end
$upscope $end
$scope module routing_segment_latch_up_counter^out~2_FF_output_0_0_to_lut_n32_input_0_2 $end
$var wire 1 ? datain $end
$var wire 1 e dataout $end
$upscope $end
$scope module routing_segment_latch_up_counter^out~2_FF_output_0_0_to_adder_up_counter^ADD~4-3[0]_input_0_0 $end
$var wire 1 ? datain $end
$var wire 1 f dataout $end
$upscope $end
$scope module routing_segment_latch_up_counter^out~2_FF_output_0_0_to_up_counter^out~2_input_0_0 $end
$var wire 1 ? datain $end
$var wire 1 g dataout $end
$upscope $end
$scope module routing_segment_latch_up_counter^out~3_FF_output_0_0_to_lut_n27_input_0_4 $end
$var wire 1 @ datain $end
$var wire 1 h dataout $end
$upscope $end
$scope module routing_segment_latch_up_counter^out~3_FF_output_0_0_to_adder_up_counter^ADD~4-4[0]_input_0_0 $end
$var wire 1 @ datain $end
$var wire 1 i dataout $end
$upscope $end
$scope module routing_segment_latch_up_counter^out~3_FF_output_0_0_to_up_counter^out~3_input_0_0 $end
$var wire 1 @ datain $end
$var wire 1 j dataout $end
$upscope $end
$scope module lut_gnd $end
$var wire 5 k in [4:0] $end
$var wire 1 7 out $end
$var parameter 32 l K [31:0] $end
$var parameter 32 m LUT_MASK [31:0] $end
$upscope $end
$scope module lut_vcc $end
$var wire 5 n in [4:0] $end
$var wire 1 3 out $end
$var parameter 32 o K [31:0] $end
$var parameter 32 p LUT_MASK [31:0] $end
$upscope $end
$scope module lut_n22 $end
$var wire 5 q in [4:0] $end
$var wire 1 / out $end
$var parameter 32 r K [31:0] $end
$var parameter 32 s LUT_MASK [31:0] $end
$upscope $end
$scope module latch_up_counter^out~0_FF $end
$var wire 1 E clock $end
$var wire 1 M D $end
$var reg 1 t Q $end
$var parameter 0 u INITIAL_VALUE $end
$upscope $end
$scope module lut_n27 $end
$var wire 5 v in [4:0] $end
$var wire 1 0 out $end
$var parameter 32 w K [31:0] $end
$var parameter 32 x LUT_MASK [31:0] $end
$upscope $end
$scope module latch_up_counter^out~3_FF $end
$var wire 1 F clock $end
$var wire 1 N D $end
$var reg 1 y Q $end
$var parameter 0 z INITIAL_VALUE $end
$upscope $end
$scope module lut_n37 $end
$var wire 5 { in [4:0] $end
$var wire 1 2 out $end
$var parameter 32 | K [31:0] $end
$var parameter 32 } LUT_MASK [31:0] $end
$upscope $end
$scope module latch_up_counter^out~1_FF $end
$var wire 1 G clock $end
$var wire 1 P D $end
$var reg 1 ~ Q $end
$var parameter 0 !! INITIAL_VALUE $end
$upscope $end
$scope module lut_n32 $end
$var wire 5 "! in [4:0] $end
$var wire 1 1 out $end
$var parameter 32 #! K [31:0] $end
$var parameter 32 $! LUT_MASK [31:0] $end
$upscope $end
$scope module latch_up_counter^out~2_FF $end
$var wire 1 H clock $end
$var wire 1 O D $end
$var reg 1 %! Q $end
$var parameter 0 &! INITIAL_VALUE $end
$upscope $end
$scope module adder_up_counter^ADD~4-0[0] $end
$var wire 1 Q a [0:0] $end
$var wire 1 V b [0:0] $end
$var wire 1 '! cin $end
$var wire 1 4 cout $end
$var wire 1 (! sumout [0:0] $end
$var parameter 0 )! WIDTH $end
$upscope $end
$scope module adder_up_counter^ADD~4-1[0] $end
$var wire 1 ` a [0:0] $end
$var wire 1 R b [0:0] $end
$var wire 1 S cin $end
$var wire 1 5 cout $end
$var wire 1 6 sumout [0:0] $end
$var parameter 0 *! WIDTH $end
$upscope $end
$scope module adder_up_counter^ADD~4-2[0] $end
$var wire 1 c a [0:0] $end
$var wire 1 W b [0:0] $end
$var wire 1 T cin $end
$var wire 1 8 cout $end
$var wire 1 9 sumout [0:0] $end
$var parameter 0 +! WIDTH $end
$upscope $end
$scope module adder_up_counter^ADD~4-3[0] $end
$var wire 1 f a [0:0] $end
$var wire 1 X b [0:0] $end
$var wire 1 Z cin $end
$var wire 1 : cout $end
$var wire 1 ; sumout [0:0] $end
$var parameter 0 ,! WIDTH $end
$upscope $end
$scope module adder_up_counter^ADD~4-4[0] $end
$var wire 1 i a [0:0] $end
$var wire 1 Y b [0:0] $end
$var wire 1 \ cin $end
$var wire 1 -! cout $end
$var wire 1 < sumout [0:0] $end
$var parameter 0 .! WIDTH $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
x!
0!!
x"
bx "!
x#
b101 #!
bx $
b11011000 $!
x%
x%!
x&
0&!
x'
x'!
x(
x(!
x)
1)!
x*
1*!
x+
1+!
x,
1,!
x-
x-!
x.
1.!
x/
x0
x1
x2
x3
x4
x5
x6
x7
x8
x9
x:
x;
x<
x=
x>
x?
x@
xA
xB
xC
xD
xE
xF
xG
xH
xI
xJ
xK
xL
xM
xN
xO
xP
xQ
xR
xS
xT
xU
xV
xW
xX
xY
xZ
x[
x\
x]
x^
x_
x`
xa
xb
xc
xd
xe
xf
xg
xh
xi
xj
bx k
b101 l
b11111111111111111111111111111110 m
bx n
b101 o
b1 p
bx q
b101 r
b10001000000010001000000000000 s
xt
0u
bx v
b101 w
b11010000000000001000 x
xy
0z
bx {
b101 |
b11000000000000001000000010 }
x~
$end
